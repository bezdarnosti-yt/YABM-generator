name: Build and Release

on:
  push:
    branches: [ "v*" ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: yabm-generator-linux
            output_file: yabm-generator-linux
          - os: windows-latest
            artifact_name: yabm-generator-windows
            output_file: yabm-generator-windows.exe
          - os: macos-latest
            artifact_name: yabm-generator-macos
            output_file: yabm-generator-macos

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.14'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install nuitka

      - name: Prepare for build
        run: |
          # Копируем test.jpg в текущую директорию для сборки
          cp src/test.jpg . || echo "test.jpg не найден, продолжение без него"

      - name: Build with Nuitka (Linux/macOS)
        if: matrix.os != 'windows-latest'
        run: |
          cd src
          python -m nuitka --standalone --onefile main.py --output-filename=${{ matrix.output_file }}
          mv ${{ matrix.output_file }} ../
        shell: bash

      - name: Build with Nuitka (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          cd src
          python -m nuitka --standalone --onefile main.py --output-filename=${{ matrix.output_file }}
          move ${{ matrix.output_file }} ..\
        shell: cmd

      - name: List files for debugging
        run: ls -la

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: ${{ matrix.output_file }}
          retention-days: 1

  create-release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    permissions:
      contents: write

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: List downloaded artifacts
        run: |
          echo "Содержимое artifacts:"
          find ./artifacts -type f

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./artifacts/yabm-generator-linux/yabm-generator-linux
            ./artifacts/yabm-generator-windows/yabm-generator-windows.exe
            ./artifacts/yabm-generator-macos/yabm-generator-macos
          generate_release_notes: true